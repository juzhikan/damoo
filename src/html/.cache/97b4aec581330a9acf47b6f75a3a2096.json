{"dependencies":[{"name":"babel-runtime/helpers/classCallCheck"},{"name":"babel-runtime/helpers/createClass"},{"name":"../common/utils"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _utils = require(\"../common/utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Damoo = function () {\n  function Damoo(options) {\n    (0, _classCallCheck3.default)(this, Damoo);\n\n    var opt = options || {};\n    var container = this.container = (0, _utils.getElement)(opt.container);\n    container.style.overflow = 'hidden';\n    this.fontSize = opt.fontSize || 14;\n    this.width = parseFloat((0, _utils.getStyle)(container, 'width'));\n    this.height = parseFloat((0, _utils.getStyle)(container, 'height'));\n    this.transform = 'translate(' + this.width + 'px, 0px) translateZ(0px)';\n    var trackHeight = this.fontSize + 2;\n    var trackNum = Math.floor(this.height / trackHeight);\n    var trackWidth = this.width;\n    this.pool = new Pool();\n    this.track = new Track(trackNum, trackWidth, trackHeight);\n  }\n  /* 公共样式配置，区别于 默认样式 和 字体对象的个性配置 */\n\n\n  (0, _createClass3.default)(Damoo, [{\n    key: \"getPublicConfig\",\n    value: function getPublicConfig() {\n      return {\n        fontSize: this.fontSize,\n        transform: this.transform\n      };\n    }\n    /* 弹幕装载 */\n\n  }, {\n    key: \"load\",\n    value: function load(bullets) {\n      var publicConfig = this.getPublicConfig();\n      if (!bullets) return;\n      var bulletsArr = Object.prototype.toString.call(bullets) === '[object Array]' ? bullets : [bullets];\n      for (var i = 0; i < bulletsArr.length; i++) {\n        var bullet = bulletsArr[i];\n        var isLiteral = typeof bullet === 'string';\n        if (!isLiteral && !bullet.text) {\n          throw new Error('The text attribute is required！');\n          return;\n        }\n        bullet = isLiteral && { text: bullet } || bullet;\n        bullet = (0, _utils.supplement)(bullet, publicConfig);\n        this.pool.load(new Bullet(bullet));\n      }\n    }\n    /* 弹幕倾泻 */\n\n  }, {\n    key: \"flowOut\",\n    value: function flowOut() {\n      var self = this;\n      var limit = 4;\n      var timer = setInterval(function () {\n        if (!self.pool.getAmount()) {\n          clearInterval(timer);\n        } else if (self.track.getValidTrackIndex() !== false && limit > 0) {\n          var bullet = self.pool.getLoaded();\n          var bulletDom = document.createElement('div');\n          bulletDom.addEventListener('transitionend', function (event) {\n            var target = event.currentTarget;\n            target.parentNode.removeChild(target);\n          });\n          for (var key in bullet) {\n            var quote = key === 'textContent' ? bulletDom : bulletDom.style;\n            quote[key] = bullet[key];\n          }\n          self.container.appendChild(bulletDom);\n          self.track.addTrack(bulletDom);\n          limit--;\n        } else {\n          clearInterval(timer);\n          setTimeout(function () {\n            self.flowOut();\n          }, 2000);\n        }\n      }, 200);\n    }\n  }]);\n  return Damoo;\n}(); /*!\r\n      * Damoo - HTML5 Danmaku Engine v0.0.0\r\n      * https://github.com/juzhikan/Damoo\r\n      *\r\n      * Copyright (c) 2015-2017 juzhikan\r\n      * Released under the MIT license\r\n      */\n\nvar Bullet = function Bullet(blt) {\n  (0, _classCallCheck3.default)(this, Bullet);\n\n  this.textContent = blt.text;\n  this.transform = blt.transform;\n  this.fontWeight = blt.fontWeight || 'bold';\n  this.fontFamily = blt.fontFamily || 'sans-serif';\n  this.textShadow = blt.textShadow || 'rgb(0, 0, 0) 1px 1px 2px';\n  this.opacity = blt.opacity || 1;\n  this.color = blt.color || 'rgb(255, 255, 255)';\n  this.fontSize = blt.fontSize;\n  /* 固定配置 */\n  this.display = 'inline-block';\n  this.whiteSpace = 'pre';\n  this.position = 'absolute';\n};\n\n/* 获取子弹剩余距离，计算时间，避免碰撞 */\n\n\nfunction getDistance(blt) {\n  var transform = (0, _utils.getStyle)(blt, 'transform');\n  if (!transform) return 0;\n  var translatex = transform.replace('matrix(', '').replace(')', '').split(',')[4].replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  return parseFloat(translatex) + blt.clientWidth;\n}\n\nvar Track = function () {\n  function Track(n, w, h) {\n    (0, _classCallCheck3.default)(this, Track);\n\n    this.num = n;\n    this.width = w;\n    this.height = h;\n    this.records = [];\n    while (n--) {\n      this.records.push({\n        node: null,\n        duration: 0\n      });\n    }\n  }\n  /* 获取可用的弹轨，无可用返回 false */\n\n\n  (0, _createClass3.default)(Track, [{\n    key: \"getValidTrackIndex\",\n    value: function getValidTrackIndex() {\n      var records = this.records;\n      for (var index = 0; index < records.length; index++) {\n        var record = records[index];\n        if (!record.node || getDistance(record.node) < this.width) return index;\n      }\n      return false;\n    }\n    /* 将弹幕加入弹轨，随后发射弹幕 */\n\n  }, {\n    key: \"addTrack\",\n    value: function addTrack(bullet, index) {\n      var trackIndex = index !== undefined ? index : (0, _utils.getRandom)(0, this.num - 1);\n      trackIndex = trackIndex || 0;\n      var top = trackIndex * this.height;\n      /* 弹幕是否能放到当前轨道中，不能的话另寻轨道，能的话计算速度 */\n      var record = this.records[trackIndex];\n      if (record.node) {\n        var nearestBullet = record.node;\n        var duration = record.duration;\n        var distance = getDistance(nearestBullet);\n        if (distance > this.width) {\n          var validTrackIndex = this.getValidTrackIndex();\n          this.addTrack(bullet, validTrackIndex);\n          return;\n        } else if (distance >= 0) {\n          /* 可以放入，需要计算时间 */\n          var w = this.width;\n          var bullet_speed = (w + nearestBullet.clientWidth) / duration * w / distance;\n          var bullet_duration = (bullet.clientWidth + w + 10) / bullet_speed;\n          bullet_duration = bullet_duration < 4 ? 4 : bullet_duration;\n          this.shoot(bullet, bullet_duration, trackIndex, top);\n          return;\n        }\n      }\n      this.shoot(bullet, 6, trackIndex, top);\n    }\n    /* 发射弹幕 */\n\n  }, {\n    key: \"shoot\",\n    value: function shoot(bullet, duration, trackIndex, top) {\n      this.records[trackIndex].node = bullet;\n      this.records[trackIndex].duration = duration;\n      bullet.style.transition = 'transform ' + duration + 's linear';\n      bullet.style.top = top + 'px';\n      requestAnimationFrame(function () {\n        bullet.style.transform = 'translate(' + -bullet.clientWidth + 'px, 0px) translateZ(0px)';\n      });\n    }\n  }]);\n  return Track;\n}();\n\nvar Pool = function () {\n  function Pool() {\n    (0, _classCallCheck3.default)(this, Pool);\n\n    this.bullets = [];\n  }\n\n  (0, _createClass3.default)(Pool, [{\n    key: \"load\",\n    value: function load(bullet) {\n      this.bullets.push(bullet);\n    }\n  }, {\n    key: \"getLoaded\",\n    value: function getLoaded() {\n      return this.bullets.length && this.bullets.shift();\n    }\n  }, {\n    key: \"getAmount\",\n    value: function getAmount() {\n      return this.bullets.length;\n    }\n  }, {\n    key: \"empty\",\n    value: function empty() {\n      this.bullets = [];\n    }\n  }]);\n  return Pool;\n}();\n\nexports.default = Damoo;"},"hash":"1a95b99c3729842816b932e3659e51c0"}